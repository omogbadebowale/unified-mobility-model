# ======================================================
# Unified Mobility Model Fitting 
# Authors: Gbadebo Taofeek Yusuf, Sukhwinder Singh, Alexandros Askounis, Zlatka Stoeva, Fideline Tchuenbou-Magaia
# Description: Model fitting code for Half heuslar using semi-empirical mobility model.
# This code is part of the repository: Unified Mobility Model for Grain-Boundary-Limited Transport
# ======================================================
import numpy as np
import matplotlib.pyplot as plt

# Constants
k_B = 8.6173e-5  # Boltzmann constant in eV/K
T_300 = 300  # Reference temperature in K

# Experimental data
T = np.array([350, 400, 450, 500, 550, 600, 650, 700, 750, 800])  # Temperature in K
μ_H = np.array([32, 28, 24, 22, 20, 18, 16, 14, 12, 10])  # Mobility in cm²/V·s

# Given values for the unified model
μ_w = 50  # cm²/V·s
Φ_GB = 0.001  # eV
l_300 = 31.39  # nm
p = 2.28

# Unified mobility model function
def l_T(T, l_300, p):
    return l_300 * (T / T_300) ** (-p)

def mobility_model(T, μ_w, Φ_GB, l_300, p):
    l_T_values = l_T(T, l_300, p)
    return μ_w * np.exp(-Φ_GB / (k_B * T)) * l_T_values / (l_T_values + 11.79)  # w_GB = 11.79 nm as placeholder

# Generate fitted values using the given parameters
μ_H_unified_given = mobility_model(T, μ_w, Φ_GB, l_300, p)

# Plot the data and fitted unified model curve
plt.figure(figsize=(8, 5))
plt.plot(T, μ_H, 'bo', label='Experimental data')
plt.plot(T, μ_H_unified_given, 'r-', label='Fitted Unified Model (given parameters)')
plt.xlabel('Temperature (K)')
plt.ylabel('Mobility (cm²/V·s)')
plt.title('Unified Model Fit for Mobility vs. Temperature for ZrNiSn Half-Heusler (Given Parameters)')
plt.legend()
plt.grid(True)
plt.show()
