# ======================================================
# Unified Mobility Model Fitting for ZrNiSn
# Authors: Gbadebo Taofeek Yusuf, Sukhwinder Singh, Alexandros Askounis, Zlatka Stoeva, Fideline Tchuenbou-Magaia
# Description: Model fitting code for ZrNiSn using semi-empirical mobility model.
# This code is part of the repository: Unified Mobility Model for Grain-Boundary-Limited Transport
# ======================================================# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt

# --- Unified model ---
k_B = 8.617333262e-5  # eV/K
T0  = 300.0

def l_of_T(T, l300, p):
    return l300 * (T / T0)**(-p)

def mu_model(T, mu_w, Phi_GB, l300, p, w_GB=11.79):
    lT = l_of_T(T, l300, p)
    return mu_w * np.exp(-Phi_GB / (k_B * T)) * (lT / (lT + w_GB))

def plot_like_snse(T, mu_data, params, w_GB=11.79, label='SnSe', title=None, save=None):
    """params = (mu_w, Phi_GB, l300, p)"""
    mu_w, Phi_GB, l300, p = params

    # smooth model curve on a fine grid
    Tfine = np.linspace(min(T), max(T), 500)
    mu_fit = mu_model(Tfine, mu_w, Phi_GB, l300, p, w_GB=w_GB)

    # style to mimic the SnSe figure
    plt.figure(figsize=(6,4.5))
    plt.plot(Tfine, mu_fit, '-', color='red', lw=2, label='Model')
    plt.plot(T, mu_data, 'o', ms=6, mec='blue', mfc='white', mew=1.5, color='blue', label=label)

    plt.xlabel('T (K)')
    plt.ylabel(r'$\mu_{\mathrm{eff}}$ (cm$^2$/V·s)')
    plt.xlim(min(T)-10, max(T)+10)
    plt.ylim(0, max(max(mu_data), np.max(mu_fit))*1.1)
    if title:
        plt.title(title)
    plt.grid(True, alpha=0.3)
    plt.legend(loc='best', frameon=False)
    plt.tight_layout()
    if save:
        plt.savefig(save, dpi=300)
    plt.show()

# ---- Example: ZrNiSn numbers you’ve been using ----
T = np.array([350, 400, 450, 500, 550, 600, 650, 700, 750, 800])
mu_data = np.array([32, 28, 24, 22, 20, 18, 16, 14, 12, 10])

params = (50.0, 0.001, 31.39, 2.28)  # (mu_w, Phi_GB, l300, p)
plot_like_snse(T, mu_data, params, w_GB=11.79, label='ZrNiSn', title='ZrNiSn')
